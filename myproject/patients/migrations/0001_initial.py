# Generated by Django 3.2.8 on 2024-05-19 22:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('alfa_3', models.CharField(max_length=3, primary_key=True, serialize=False, verbose_name='Código de tres letras del país')),
                ('name_country', models.CharField(max_length=200, unique=True, verbose_name='Nombre del país')),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id_dis', models.CharField(max_length=2, primary_key=True, serialize=False, verbose_name='Código de la discapacidad')),
                ('name_dis', models.CharField(max_length=50, unique=True, verbose_name='Nombre de la discapacidad')),
            ],
            options={
                'db_table': 'disability',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eps',
            fields=[
                ('code_eps', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='Código de la EPS')),
                ('name_eps', models.CharField(max_length=200, unique=True, verbose_name='Nombre de la EPS')),
            ],
            options={
                'db_table': 'eps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id_et', models.CharField(max_length=2, primary_key=True, serialize=False, verbose_name='Código de la etnia')),
                ('name_ethn', models.CharField(max_length=200, unique=True, verbose_name='Nombre de la etnia')),
            ],
            options={
                'db_table': 'ethnicity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Municipalities',
            fields=[
                ('departament', models.CharField(max_length=200, verbose_name='Departamento')),
                ('code_dep', models.CharField(max_length=5, primary_key=True, serialize=False, verbose_name='Código del municipio')),
                ('name_dep', models.CharField(max_length=200, verbose_name='Nombre del municipio')),
                ('type_mnc', models.CharField(max_length=200, verbose_name='Tipo de municipio')),
            ],
            options={
                'db_table': 'municipalities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Occupations',
            fields=[
                ('code_occ', models.CharField(max_length=4, primary_key=True, serialize=False, verbose_name='Código de la ocupación')),
                ('name_occ', models.CharField(max_length=200, unique=True, verbose_name='Nombre de la ocupación')),
            ],
            options={
                'db_table': 'occupations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Typesdocs',
            fields=[
                ('id_typedoc', models.CharField(max_length=2, primary_key=True, serialize=False, verbose_name='Código del tipo de documento')),
                ('doc_type', models.CharField(max_length=100, unique=True, verbose_name='Descripción')),
            ],
            options={
                'db_table': 'typesdocs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id_history', models.AutoField(primary_key=True, serialize=False, verbose_name='Código de historia clínica')),
                ('number_doc', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Solo se permiten números', regex='^[0-9]*$')], verbose_name='Número de documento persona')),
                ('last_name', models.CharField(max_length=60, verbose_name='Primer apellido')),
                ('surname', models.CharField(max_length=60, verbose_name='Segundo apellido')),
                ('first_name', models.CharField(max_length=60, verbose_name='Primer nombre')),
                ('middle_name', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='Segundo nombre')),
                ('date_born', models.DateTimeField(verbose_name='Fecha de nacimiento')),
                ('biologic_sex', models.CharField(choices=[('01', 'Hombre'), ('02', 'Mujer'), ('03', 'Indeterminado intersexual')], default='01', max_length=2, verbose_name='Sexo biológico')),
                ('gender_identity', models.CharField(choices=[('01', 'Masculino'), ('02', 'Femenino'), ('03', 'Transgenero'), ('04', 'Neutro'), ('05', 'No lo declara')], default='01', max_length=2, verbose_name='Identidad de género')),
                ('opossition_donation', models.CharField(choices=[('01', 'Si'), ('02', 'No')], default='01', max_length=2, verbose_name='Oposición legal de donación')),
                ('date_opossition', models.DateField(auto_now=True, verbose_name='Fecha de oposición a la donación')),
                ('antiquated_will_document', models.CharField(choices=[('01', 'Si'), ('02', 'No')], default='01', max_length=2)),
                ('date_suscrip_ant_will_doc', models.DateField(auto_now=True, verbose_name='Fecha de suscripción del documento de voluntad anticipada')),
                ('territorial_zone', models.CharField(choices=[('01', 'Urbana'), ('02', 'Rural')], default='01', max_length=2, verbose_name='Zona de residencia')),
                ('category_disability', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patients.disability', verbose_name='Categoría de discapacidad')),
                ('country_origin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='origin_country', to='patients.countries', verbose_name='País de origen')),
                ('doc_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patients.typesdocs', verbose_name='Tipo de documento')),
                ('eps', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patients.eps', verbose_name='EPS')),
                ('ethnicity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patients.ethnicity', verbose_name='Etnia')),
                ('habitual_residence', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='residence_country', to='patients.countries', verbose_name='País de residencia habitual')),
                ('municipality_of_hab_res', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patients.municipalities', verbose_name='Municipio de residencia habitual')),
                ('occupation_care', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patients.occupations', verbose_name='Ocupación')),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
                'db_table': 'person',
            },
        ),
        migrations.AddConstraint(
            model_name='person',
            constraint=models.UniqueConstraint(fields=('doc_type', 'number_doc'), name='UQ_DOCUMENT_TYPE_IDENTITY_CARD'),
        ),
    ]
